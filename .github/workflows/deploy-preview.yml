name: Deploy Preview

on:
  workflow_run:
    workflows: ["Build Preview", "Test"]
    types:
      - completed

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    if: ${{github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success'}}
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install --global netlify-cli@6
      - run: npm install unzipper@0.10
      - name: Get pull request number
        uses: actions/github-script@v5
        with:
          script: |
            const unzipper = require('unzipper');

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{github.event.workflow_run.id}},
            });

            const artifact = artifacts.data.artifacts.filter(
              artifact => artifact.name === 'pr'
            )[0];

            if (!artifact) {
              throw new Error('No pr artifact found');
            }

            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: artifact.id,
              archive_format: 'zip',
            });

            const directory = await unzipper.Open.buffer(Buffer.from(download.data));
            const file = directory.files.find(d => d.path === 'number');
            const content = await file.buffer();
            const number = parseInt(content.toString(), 10);

            console.log('pr number', number);

  test-script:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: npm install --global netlify-cli@6
      - run: npm install unzipper@0.10
      - name: Get pull request number
        uses: actions/github-script@v5
        with:
          script: |
            const unzipper = require('unzipper');

            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{github.event.workflow_run.id}},
            });

            const artifact = artifacts.data.artifacts.filter(
              artifact => artifact.name === 'pr'
            )[0];

            if (!artifact) {
              throw new Error('No pr artifact found');
            }

            const download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: artifact.id,
              archive_format: 'zip',
            });

            const directory = await unzipper.Open.buffer(Buffer.from(download.data));
            const file = directory.files.find(d => d.path === 'number');
            const content = await file.buffer();
            const number = parseInt(content.toString(), 10);

            const comment = `
              Preview the [examples](https://example.com/${number}/examples/) and
              [docs](https://example.com/${number}/apidoc/) from this branch
              here: https://example.com/${number}.
            `;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: 1,
              body: comment,
            });
